from django.core.management.base import BaseCommand
from courses_database.models import Country  # Replace "your_app" with the actual name of your app

class Command(BaseCommand):
    help = 'Populate the Country model with country names and codes'

    def handle(self, *args, **options):

        worldMapCodes = {
            'AF': "Afghanistan",
            'AX': "Aland Islands",
            'AL': "Albania",
            'DZ': "Algeria",
            'AS': "American Samoa",
            'AD': "Andorra",
            'AO': "Angola",
            'AI': "Anguilla",
            'AQ': "Antarctica",
            'AG': "Antigua and Barbuda",
            'AR': "Argentina",
            'AM': "Armenia",
            'AW': "Aruba",
            'AU': "Australia",
            'AT': "Austria",
            'AZ': "Azerbaijan",
            'BS': "Bahamas",
            'BH': "Bahrain",
            'BD': "Bangladesh",
            'BB': "Barbados",
            'BY': "Belarus",
            'BE': "Belgium",
            'BZ': "Belize",
            'BJ': "Benin",
            'BM': "Bermuda",
            'BT': "Bhutan",
            'BO': "Bolivia",
            'BQ': "Bonaire, Sint Eustatius and Saba",
            'BA': "Bosnia and Herzegovina",
            'BW': "Botswana",
            'BV': "Bouvet Island",
            'BR': "Brazil",
            'IO': "British Indian Ocean Territory",
            'BN': "Brunei Darussalam",
            'BG': "Bulgaria",
            'BF': "Burkina Faso",
            'BI': "Burundi",
            'KH': "Cambodia",
            'CM': "Cameroon",
            'CA': "Canada",
            'CV': "Cape Verde",
            'KY': "Cayman Islands",
            'CF': "Central African Rep.",
            'TD': "Chad",
            'CL': "Chile",
            'CN': "China",
            'CX': "Christmas Island",
            'CC': "Cocos (Keeling) Islands",
            'CO': "Colombia",
            'KM': "Comoros",
            'CG': "Congo",
            'CD': "Dem. Rep. Congo",
            'CK': "Cook Islands",
            'CR': "Costa Rica",
            'CI': "C\u00f4te d'Ivoire",
            'HR': "Croatia",
            'CU': "Cuba",
            'CW': "Curacao",
            'CY': "Cyprus",
            'XC': "N. Cyprus",
            'CZ': "Czech Republic",
            'DK': "Denmark",
            'DJ': "Djibouti",
            'DM': "Dominica",
            'DO': "Dominican Republic",
            'EC': "Ecuador",
            'EG': "Egypt",
            'GB': "United Kingdom",
            'GQ': "Equatorial Guinea",
            'ER': "Eritrea",
            'EE': "Estonia",
            'ET': "Ethiopia",
            'FK': "Falkland Islands (Malvinas)",
            'FO': "Faroe Islands",
            'FJ': "Fiji",
            'FI': "Finland",
            'FR': "France",
            'GF': "French Guiana",
            'PF': "French Polynesia",
            'TF': "Fr. S. Antarctic Lands",
            'GA': "Gabon",
            'GM': "Gambia",
            'GE': "Georgia",
            'DE': "Germany",
            'GH': "Ghana",
            'GI': "Gibraltar",
            'GR': "Greece",
            'GL': "Greenland",
            'GD': "Grenada",
            'GP': "Guadeloupe",
            'GU': "Guam",
            'GT': "Guatemala",
            'GG': "Guernsey",
            'GN': "Guinea",
            'GW': "Guinea-Bissau",
            'GY': "Guyana",
            'HT': "Haiti",
            'HM': "Heard Island and Mcdonald Islands",
            'VA': "Holy See (Vatican City State)",
            'HN': "Honduras",
            'HK': "Hong Kong",
            'HU': "Hungary",
            'IS': "Iceland",
            'IN': "India",
            'ID': "Indonesia",
            'IR': "Iran",
            'IQ': "Iraq",
            'IE': "Ireland",
            'IM': "Isle of Man",
            'IL': "Israel",
            'IT': "Italy",
            'JM': "Jamaica",
            'JP': "Japan",
            'JE': "Jersey",
            'JO': "Jordan",
            'KZ': "Kazakhstan",
            'KE': "Kenya",
            'KI': "Kiribati",
            'KP': "Korea, Democratic People's Republic of",
            'KR': "Korea, Republic of",
            'KW': "Kuwait",
            'KG': "Kyrgyzstan",
            'XK': "Kosovo",
            'LA': "Laos",
            'LV': "Latvia",
            'LB': "Lebanon",
            'LS': "Lesotho",
            'LR': "Liberia",
            'LY': "Libya",
            'LI': "Liechtenstein",
            'LT': "Lithuania",
            'LU': "Luxembourg",
            'MK': "Macedonia",
            'MG': "Madagascar",
            'MW': "Malawi",
            'MY': "Malaysia",
            'MV': "Maldives",
            'ML': "Mali",
            'MT': "Malta",
            'MH': "Marshall Islands",
            'MQ': "Martinique",
            'MR': "Mauritania",
            'MU': "Mauritius",
            'YT': "Mayotte",
            'MX': "Mexico",
            'FM': "Micronesia, Federated States of",
            'MD': "Moldova, Republic of",
            'MC': "Monaco",
            'MN': "Mongolia",
            'ME': "Montenegro",
            'MS': "Montserrat",
            'MA': "Morocco",
            'MZ': "Mozambique",
            'MM': "Myanmar",
            'NA': "Namibia",
            'NE': "Niger",
            'NG': "Nigeria",
            'NI': "Nicaragua",
            'NL': "Netherlands",
            'NO': "Norway",
            'NP': "Nepal",
            'NR': "Nauru",
            'NU': "Niue",
            'NZ': "New Zealand",
            'OM': "Oman",
            'PA': "Panama",
            'PE': "Peru",
            'PG': "Papua New Guinea",
            'PH': "Philippines",
            'PK': "Pakistan",
            'PS': "Palestine",
            'PL': "Poland",
            'PT': "Portugal",
            'PW': "Palau",
            'PY': "Paraguay",
            'QA': "Qatar",
            'RO': "Romania",
            'RS': "Serbia",
            'RU': "Russia",
            'RW': "Rwanda",
            'SA': "Saudi Arabia",
            'SB': "Solomon Islands",
            'SC': "Seychelles",
            'ES': "Spain",
            'SD': "Sudan",
            'SE': "Sweden",
            'CH': "Switzerland",
            'SG': "Singapore",
            'SI': "Slovenia",
            'SK': "Slovakia",
            'SL': "Sierra Leone",
            'SM': "San Marino",
            'SN': "Senegal",
            'SO': "Somalia",
            'XS': "Somaliland",
            'SR': "Suriname",
            'SS': "South Sudan",
            'ST': "Sao Tome and Principe",
            'SV': "El Salvador",
            'SY': "Syria",
            'SZ': "Swaziland",
            'LK': "Sri Lanka",
            'TD': "Chad",
            'TG': "Togo",
            'TH': "Thailand",
            'TJ': "Tajikistan",
            'TL': "East Timor",
            'TM': "Turkmenistan",
            'TN': "Tunisia",
            'TO': "Tonga",
            'TR': "Turkey",
            'TT': "Trinidad and Tobago",
            'TV': "Tuvalu",
            'TW': "Taiwan",
            'TZ': "Tanzania",
            'UA': "Ukraine",
            'UG': "Uganda",
            'US': "United States",
            'AE': "United Arab Emirates",
            'UY': "Uruguay",
            'UZ': "Uzbekistan",
            'VA': "Vatican City",
            'VC': "Saint Vincent and the Grenadines",
            'VE': "Venezuela",
            'VN': "Vietnam",
            'VU': "Vanuatu",
            'EH': "W. Sahara",
            'WS': "Samoa",
            'YE': "Yemen",
            'ZA': "South Africa",
            'ZM': "Zambia",
            'ZW': "Zimbabwe",
        }

        for code, name in worldMapCodes.items():
            country, created = Country.objects.get_or_create(country_code=code, country_name=name)
            if created:
                self.stdout.write(self.style.SUCCESS(f'Created Country: {country.country_name}'))
            else:
                self.stdout.write(self.style.SUCCESS(f'Country already exists: {country.country_name}'))